import * as k8s from '@kubernetes/client-node';
import { IDevWorkspace, IDevWorkspaceDevfile } from '../types';
import { IDevWorkspaceApi } from '../index';
export declare class NodeDevWorkspaceApi implements IDevWorkspaceApi {
    private customObjectAPI;
    private apisApi;
    constructor(kc: k8s.KubeConfig);
    listInNamespace(namespace: string): Promise<IDevWorkspace[]>;
    getByName(namespace: string, workspaceName: string): Promise<IDevWorkspace>;
    create(devfile: IDevWorkspaceDevfile, started?: boolean): Promise<IDevWorkspace>;
    update(devworkspace: IDevWorkspace): Promise<IDevWorkspace>;
    delete(namespace: string, name: string): Promise<void>;
    changeStatus(namespace: string, name: string, started: boolean): Promise<IDevWorkspace>;
    initializeNamespace(namespace: string): Promise<void>;
    doesProjectExist(projectName: string): Promise<boolean>;
    private createProject;
    private isOpenShift;
}
