{"version":3,"sources":["webpack://devworkspace-client/webpack/universalModuleDefinition","webpack://devworkspace-client/webpack/bootstrap","webpack://devworkspace-client/./src/browser/helper.ts","webpack://devworkspace-client/./src/browser/index.ts","webpack://devworkspace-client/./src/browser/template-api.ts","webpack://devworkspace-client/./src/browser/workspace-api.ts","webpack://devworkspace-client/./src/common/converter.ts","webpack://devworkspace-client/./src/common/helper.ts","webpack://devworkspace-client/./src/common/index.ts","webpack://devworkspace-client/./src/common/models.ts","webpack://devworkspace-client/./src/index.ts","webpack://devworkspace-client/./src/types.ts"],"names":[],"mappings":"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","file":"client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"devworkspace-client\"] = factory();\n\telse\n\t\troot[\"devworkspace-client\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { AxiosInstance } from 'axios';\nimport { IKubernetesGroupsModel } from '../types';\nimport { projectApiGroup } from '../common';\n\nexport async function isOpenShiftCluster(axios: AxiosInstance): Promise<boolean> {\n    return findApi(axios, projectApiGroup);\n}\n\nexport async function findApi(axios: AxiosInstance, apiName: string, version?: string): Promise<boolean> {\n    const resp = await axios.get('/apis');\n    const responseData = await resp.data.groups;\n    return responseData.filter((apiGroup: IKubernetesGroupsModel) => {\n        if (version) {\n            return apiGroup.name === apiName && apiGroup.versions.filter(versionGroup => versionGroup.version === version).length > 0;\n        }\n        return apiGroup.name === apiName;\n    }).length > 0;\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { AxiosInstance } from 'axios';\nimport { devWorkspaceApiGroup, devworkspaceVersion } from '../common';\nimport {\n  IDevWorkspaceApi,\n  IDevWorkspaceClientApi,\n  IDevWorkspaceTemplateApi,\n} from '../types';\nimport { findApi } from './helper';\nimport { RestDevWorkspaceApi } from './workspace-api';\nimport { RestDevWorkspaceTemplateApi } from './template-api';\n\nexport class RestApi implements IDevWorkspaceClientApi {\n  private axios: AxiosInstance;\n  private _workspaceApi: IDevWorkspaceApi;\n  private _templateApi: IDevWorkspaceTemplateApi;\n  private apiEnabled: boolean | undefined;\n\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n    this._workspaceApi = new RestDevWorkspaceApi(axios);\n    this._templateApi = new RestDevWorkspaceTemplateApi(axios);\n  }\n\n  get workspaceApi(): IDevWorkspaceApi {\n    return this._workspaceApi;\n  }\n\n  get templateApi(): IDevWorkspaceTemplateApi {\n    return this._templateApi;\n  }\n\n  async isDevWorkspaceApiEnabled(): Promise<boolean> {\n    if (this.apiEnabled !== undefined) {\n      return Promise.resolve(this.apiEnabled);\n    }\n    this.apiEnabled = await findApi(this.axios, devWorkspaceApiGroup, devworkspaceVersion);\n    return this.apiEnabled;\n  }\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { AxiosInstance } from 'axios';\nimport { IDevWorkspaceTemplate, IDevWorkspaceTemplateApi } from '../types';\nimport { devworkspaceVersion, devWorkspaceApiGroup, devworkspaceTemplateSubresource } from '../common';\n\nexport class RestDevWorkspaceTemplateApi implements IDevWorkspaceTemplateApi {\n  private axios: AxiosInstance;\n\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n\n  async listInNamespace(namespace: string): Promise<IDevWorkspaceTemplate[]> {\n    const resp = await this.axios.get(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspaceTemplateSubresource}`\n    );\n    return resp.data.items;\n  }\n\n  async getByName(\n    namespace: string,\n    workspaceName: string\n  ): Promise<IDevWorkspaceTemplate> {\n    const resp = await this.axios.get(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspaceTemplateSubresource}/${workspaceName}`\n    );\n    return resp.data;\n  }\n\n  async create(\n    devworkspaceTemplate: IDevWorkspaceTemplate,\n  ): Promise<IDevWorkspaceTemplate> {\n    const resp = await this.axios.post(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${devworkspaceTemplate.metadata.namespace}/${devworkspaceTemplateSubresource}`,\n      devworkspaceTemplate,\n      {\n        headers: {\n          'content-type': 'application/json; charset=utf-8',\n        },\n      }\n    );\n    return resp.data;\n  }\n\n  async delete(namespace: string, name: string): Promise<void> {\n    this.axios.delete(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspaceTemplateSubresource}/${name}`\n    );\n  }\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { AxiosInstance } from 'axios';\nimport { devfileToDevWorkspace } from '../common/converter';\nimport { IDevWorkspace, IDevWorkspaceDevfile } from '../types';\nimport { delay } from '../common/helper';\nimport { IDevWorkspaceApi } from '../index';\nimport { devworkspaceVersion, devWorkspaceApiGroup, projectApiGroup, devworkspacePluralSubresource, projectRequestId, projectsId } from '../common';\nimport { projectRequestModel } from '../common/models';\nimport { isOpenShiftCluster } from './helper';\n\nexport class RestDevWorkspaceApi implements IDevWorkspaceApi {\n  private axios: AxiosInstance;\n  private projectInitRequestTimeoutMs = 10000;\n  private projectRequestDelayMs = 100;\n\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n\n  async listInNamespace(namespace: string): Promise<IDevWorkspace[]> {\n    const resp = await this.axios.get(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspacePluralSubresource}`\n    );\n    return resp.data.items;\n  }\n\n  async getByName(\n    namespace: string,\n    workspaceName: string\n  ): Promise<IDevWorkspace> {\n    const resp = await this.axios.get(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspacePluralSubresource}/${workspaceName}`\n    );\n    return resp.data;\n  }\n\n  async create(\n    devfile: IDevWorkspaceDevfile,\n    started = true\n  ): Promise<IDevWorkspace> {\n    const devworkspace = devfileToDevWorkspace(devfile, started);\n    const stringifiedDevWorkspace = JSON.stringify(devworkspace);\n\n    const resp = await this.axios.post(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${devfile.metadata.namespace}/${devworkspacePluralSubresource}`,\n      stringifiedDevWorkspace,\n      {\n        headers: {\n          'content-type': 'application/json; charset=utf-8',\n        },\n      }\n    );\n\n    const responseData = await resp.data;\n    const namespace = responseData.metadata.namespace;\n    const name = responseData.metadata.name;\n\n    // we need to wait until the devworkspace has a status property\n    let found;\n    let count = 0;\n    while (count < 5 && !found) {\n      const potentialWorkspace = await this.getByName(namespace, name);\n      if (potentialWorkspace?.status) {\n        found = potentialWorkspace;\n      } else {\n        count += 1;\n        delay();\n      }\n    }\n    if (!found) {\n      throw new Error(\n        `Was not able to find a workspace with name ${name} in namespace ${namespace}`\n      );\n    }\n    return found;\n  }\n\n  async update(devworkspace: IDevWorkspace): Promise<IDevWorkspace> {\n    const name = devworkspace.metadata.name;\n    const namespace = devworkspace.metadata.namespace;\n    const resp = await this.axios.put(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspacePluralSubresource}/${name}`,\n      devworkspace,\n      {\n        headers: {\n          'content-type': 'application/json; charset=utf-8',\n        },\n      }\n    );\n    return resp.data;\n  }\n\n  async delete(namespace: string, name: string): Promise<void> {\n    await this.axios.delete(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspacePluralSubresource}/${name}`\n    );\n  }\n\n  async changeStatus(namespace: string, name: string, started: boolean): Promise<IDevWorkspace> {\n    const patch = [\n      {\n        path: '/spec/started',\n        op: 'replace',\n        value: started,\n      },\n    ];\n\n    const resp = await this.axios.patch(\n      `/apis/${devWorkspaceApiGroup}/${devworkspaceVersion}/namespaces/${namespace}/${devworkspacePluralSubresource}/${name}`,\n      patch,\n      {\n        headers: {\n          'Content-type': 'application/json-patch+json',\n        },\n      }\n    );\n    return resp.data;\n  }\n\n  async initializeNamespace(namespace: string): Promise<void> {\n    const isOpenShift = await isOpenShiftCluster(this.axios);\n    if (isOpenShift) {\n      const doesProjectAlreadyExist = await this.doesProjectExist(namespace);\n      if (!doesProjectAlreadyExist) {\n        this.createProject(namespace);\n        await this.waitForProjectToBeReady(namespace);\n      }\n    }\n  }\n\n  async doesProjectExist(projectName: string): Promise<boolean> {\n    try {\n      const projects = await this.axios.get(`/apis/${projectApiGroup}/v1/${projectsId}`);\n      for (const proj of projects.data.items) {\n        if (proj.metadata.name === projectName) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  private createProject(namespace: string): void {\n    this.axios.post(`/apis/${projectApiGroup}/v1/${projectRequestId}`, projectRequestModel(namespace));\n  }\n\n  private async waitForProjectToBeReady(namespace: string): Promise<void> {\n    let millisecondsAttempted = 0;\n    let request = await this.doesProjectExist(namespace);\n    while (millisecondsAttempted < this.projectInitRequestTimeoutMs && !request) {\n      request = await this.doesProjectExist(namespace);\n      await delay(this.projectRequestDelayMs);\n      millisecondsAttempted += this.projectRequestDelayMs;\n    }\n    if (millisecondsAttempted >= this.projectInitRequestTimeoutMs) {\n      throw new Error(`Project ${namespace} could not be initialized in ${this.projectInitRequestTimeoutMs / 1000} seconds`);\n    }\n  }\n\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { IDevWorkspace, IDevWorkspaceDevfile } from '../types';\nimport { devworkspaceVersion, devWorkspaceApiGroup } from '.';\n\nexport function devfileToDevWorkspace(devfile: IDevWorkspaceDevfile, started: boolean): IDevWorkspace {\n    devfile.metadata.annotations = {};\n    const template = {\n        apiVersion: `${devWorkspaceApiGroup}/${devworkspaceVersion}`,\n        kind: 'DevWorkspace',\n        metadata: devfile.metadata,\n        spec: {\n            started,\n            routingClass: 'che',\n            template: {\n                components: []\n            }\n        }\n    } as IDevWorkspace;\n    if (devfile.projects) {\n        template.spec.template.projects = devfile.projects;\n    }\n    if (devfile.components) {\n        template.spec.template.components = devfile.components;\n    }\n    if (devfile.commands) {\n        template.spec.template.commands = devfile.commands;\n    }\n    if (devfile.events) {\n        template.spec.template.events = devfile.events;\n    }\n    return template;\n}\n\nexport function devWorkspaceToDevfile(devworkspace: IDevWorkspace): IDevWorkspaceDevfile {\n    const template = {\n        schemaVersion: '2.0.0',\n        metadata: {\n            name: devworkspace.metadata.name,\n            namespace: devworkspace.metadata.namespace\n        },\n    } as IDevWorkspaceDevfile;\n    if (devworkspace.spec.template.projects) {\n        template.projects = devworkspace.spec.template.projects;\n    }\n    if (devworkspace.spec.template.components) {\n        template.components = devworkspace.spec.template.components;\n    }\n    if (devworkspace.spec.template.commands) {\n        template.commands = devworkspace.spec.template.commands;\n    }\n    if (devworkspace.spec.template.events) {\n        template.events = devworkspace.spec.template.events;\n    }\n    return template;\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nexport const delay = (ms = 500) => {\n    return new Promise<void>(resolve => setTimeout(resolve, ms));\n};\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nexport const devworkspaceVersion = 'v1alpha2';\nexport const devworkspacePluralSubresource = 'devworkspaces';\nexport const devworkspaceSingularSubresource = 'devworkspace';\nexport const devworkspaceTemplateSubresource = 'devworkspacetemplates';\nexport const projectsId = 'projects';\nexport const projectRequestId = 'projectrequests';\n\nexport const projectApiGroup = 'project.openshift.io';\nexport const devWorkspaceApiGroup = 'workspace.devfile.io';\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { projectApiGroup } from '.';\n\nexport const projectRequestModel = (namespace: string) => {\n  return {\n    apiVersion: `${projectApiGroup}/v1`,\n    kind: 'ProjectRequest',\n    metadata: {\n      name: namespace,\n    },\n  };\n};\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nimport { AxiosInstance } from 'axios';\nimport { INodeConfig } from './types';\nimport { RestApi } from './browser';\n\nexport * from './common/converter';\nexport * from './common/index';\nexport * from './types';\n\nexport class DevWorkspaceClient {\n\n    public static getRestApi(axios: AxiosInstance) {\n        return new RestApi(axios);\n    }\n\n    public static getNodeApi(config: INodeConfig = {\n        inCluster: true\n    }) {\n        if (!DevWorkspaceClient.isItNode()) {\n            throw new Error('getNodeApi is only available when running in nodejs');\n        } else {\n            const nodeApi = require('./node').NodeApi;\n            return new nodeApi(config);\n        }\n    }\n\n    private static isItNode() {\n        return (typeof process !== 'undefined') && (typeof process.versions.node !== 'undefined');\n    }\n\n}\n","/*\n * Copyright (c) 2018-2021 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\nexport interface IDevWorkspaceApi {\n    listInNamespace(namespace: string): Promise<IDevWorkspace[]>;\n    getByName(namespace: string, workspaceName: string): Promise<IDevWorkspace>;\n    create(\n        devfile: IDevWorkspaceDevfile,\n        started?: boolean\n    ): Promise<IDevWorkspace>;\n    update(devworkspace: IDevWorkspace): Promise<IDevWorkspace>;\n    delete(namespace: string, name: string): Promise<void>;\n    changeStatus(namespace: string, name: string, started: boolean): Promise<IDevWorkspace>;\n    initializeNamespace(namespace: string): Promise<void>;\n}\n\nexport interface IDevWorkspaceTemplateApi {\n    listInNamespace(namespace: string): Promise<IDevWorkspaceTemplate[]>;\n    getByName(namespace: string, workspaceName: string): Promise<IDevWorkspaceTemplate>;\n    delete(namespace: string, name: string): Promise<void>;\n    create(template: IDevWorkspaceTemplate): Promise<IDevWorkspaceTemplate>;\n}\n\nexport interface IDevWorkspaceClientApi {\n    workspaceApi: IDevWorkspaceApi;\n    templateApi: IDevWorkspaceTemplateApi;\n    isDevWorkspaceApiEnabled(): Promise<boolean>;\n}\n\nexport interface IDevWorkspace {\n    apiVersion: string;\n    kind: string;\n    metadata: {\n        name: string;\n        namespace: string;\n        creationTimestamp?: string;\n        deletionTimestamp?: string;\n        uid?: string;\n    };\n    spec: {\n        started: boolean;\n        routingClass: string;\n        template: {\n            projects?: any;\n            components?: any;\n            commands?: any;\n            events?: any;\n        }\n    };\n    status: {\n        ideUrl: string;\n        phase: string;\n        workspaceId: string;\n        message?: string;\n    };\n}\n\nexport interface IDevWorkspaceTemplate {\n    apiVersion: string;\n    kind: string;\n    metadata: {\n        name: string;\n        namespace: string;\n        ownerReferences: OwnerRefs[];\n    };\n    spec: IDevWorkspaceDevfile;\n}\n\nexport interface OwnerRefs {\n    apiVersion: string;\n    kind: string;\n    name: string;\n    uid: string;\n}\n\nexport interface IDevWorkspaceDevfile {\n    schemaVersion: string;\n    metadata: {\n        name: string;\n        namespace: string;\n        annotations?: {};\n    };\n    projects?: any;\n    components?: any;\n    commands?: any;\n    events?: any;\n}\n\nexport interface INodeConfig {\n    inCluster: boolean;\n}\n\nexport interface IKubernetesGroupsModel {\n    name: string;\n    versions: {\n        version: string;\n    }[];\n}\n"],"sourceRoot":""}